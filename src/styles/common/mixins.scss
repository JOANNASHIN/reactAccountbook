@mixin clear() {
  &:after {
    display: block;
    clear: both;
    content: '';
  }
}

//말줄임 후략
@mixin line($lineCount: 1) {
  /* 사용법 : @include line(라인수) */
  @if ($lineCount == 1) {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  } @else if($lineCount == 'auto') {
    display: block;
    overflow: visible;
  } @else {
    /* autoprefixer: off */
    -webkit-box-orient: vertical;

    /* autoprefixer: on */
    display: block;
    display: -webkit-box;
    overflow: hidden;
    text-overflow: ellipsis;
    word-break: break-all;
    -webkit-line-clamp: $lineCount;
  }
}

//font guide
$lineheights: (
  1.1rem: rem(18px),
  1.2rem: rem(18px),
  1.3rem: rem(19px),
  1.4rem: rem(22px),
  1.5rem: rem(24px),
  1.6rem: rem(24px),
  1.8rem: rem(27px),
  2rem: rem(30px),
  2.8rem: rem(42px),
);

@mixin fontcss($color: $black, $weight: 200, $size: rem(13px), $lineheight: none) {
  @if ($color) {
    color: $color;
  }
  @if ($weight) {
    font-weight: $weight;
  }
  @if ($size) {
    font-size: $size;
  }
  @if ($lineheight != 'none') {
    line-height: $lineheight;
  } @else {
    line-height: map-get($lineheights, $size);
  }
}

@mixin shadow($inset: '') {
  //1안
  box-shadow: #{$inset} rem(-3px -3px 6px 0) rgba(255, 255, 255, 0.8),
    #{$inset} rem(3px 3px 6px 0) rgba(76, 76, 76, 0.2);

  //2안
  // $white1: rgb(246 246 246);
  // $white2: rgb(246 246 246 / 50%);
  // $black1: rgb(60 60 60 / 30%);

  // box-shadow: inset $white1 3px 3px 2px 0px, inset $black1 -3px -3px 2px 0px,
  //   $white2 -3px -3px 2px 0px, $black1 2px 2px 4px 0px;
}

@mixin safeArea($target: 'padding-bottom', $px: rem(16px), $direction: 'top') {
  @if ($px == '') {
    padding-top: constant(safe-area-inset-top);
    padding-top: env(safe-area-inset-top);
  } @else if ($target == 'padding-bottom') {
    padding-bottom: $px;
    padding-bottom: calc(constant(safe-area-inset-#{$direction}) + $px);
    padding-bottom: calc(env(safe-area-inset-#{$direction}) + $px);
  } @else if ($target == 'padding-top') {
    padding-top: $px;
    padding-top: calc(constant(safe-area-inset-#{$direction}) + $px);
    padding-top: calc(env(safe-area-inset-#{$direction}) + $px);
  } @else if ($target == 'height') {
    height: $px;
    height: calc(constant(safe-area-inset-#{$direction}) + $px);
    height: calc(env(safe-area-inset-#{$direction}) + $px);
  }
}

@function dim($opacity: 0.5) {
  @return rgba(#111, $opacity);
}
